# CPQ后端API Nginx配置
# 位置: /www/server/panel/vhost/nginx/cpqh.d1bbk.com.conf  
# 宝塔面板中: Python项目 → 项目设置 → Nginx配置

server {
    listen 80;
    server_name cpqh.d1bbk.com;
    
    # 访问日志
    access_log /www/wwwlogs/cpqh.d1bbk.com.log;
    error_log /www/wwwlogs/cpqh.d1bbk.com.error.log;
    
    # 字符集
    charset utf-8;
    
    # 安全头信息
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # 主要API路由
    location / {
        proxy_pass http://127.0.0.1:5000;
        proxy_redirect off;
        
        # 请求头设置
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        
        # CORS配置
        add_header Access-Control-Allow-Origin "http://cpq.d1bk.com" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
        add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;
        add_header Access-Control-Allow-Credentials "true" always;
        
        # 处理预检请求
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "http://cpq.d1bk.com";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS";
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type "text/plain; charset=utf-8";
            add_header Content-Length 0;
            return 204;
        }
        
        # 超时配置 (支持AI长时间请求)
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # 缓冲区配置
        proxy_buffer_size 64k;
        proxy_buffers 4 64k;
        proxy_busy_buffers_size 128k;
        proxy_temp_file_write_size 128k;
        
        # 请求体大小限制
        client_max_body_size 50M;
        client_body_buffer_size 128k;
        
        # WebSocket支持
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    
    # 静态文件上传目录
    location /uploads/ {
        alias /www/wwwroot/cpqh.d1bbk.com/instance/uploads/;
        expires 30d;
        add_header Cache-Control "public";
        
        # 安全配置 - 禁止执行脚本
        location ~* \.(php|php3|php4|php5|phtml|pl|py|jsp|asp|sh|cgi)$ {
            deny all;
        }
        
        # CORS for uploaded files
        add_header Access-Control-Allow-Origin "http://cpq.d1bk.com" always;
    }
    
    # API文档访问 (可选)
    location /docs {
        proxy_pass http://127.0.0.1:5000/docs;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    
    # 健康检查端点
    location /health {
        proxy_pass http://127.0.0.1:5000/health;
        proxy_set_header Host $host;
        access_log off;
        
        # 快速响应
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }
    
    location /ping {
        proxy_pass http://127.0.0.1:5000/ping;
        proxy_set_header Host $host;
        access_log off;
    }
    
    # 限制访问敏感目录
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~* \.(env|ini|conf|git|svn|htaccess|htpasswd)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # 防止访问Python源码
    location ~* \.(py|pyc|pyo|pyd|pyw|pyz)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # 限制请求方法
    if ($request_method !~ ^(GET|HEAD|POST|PUT|DELETE|OPTIONS|PATCH)$) {
        return 405;
    }
    
    # 请求频率限制 (防DDoS)
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req zone=api burst=20 nodelay;
    
    # 连接数限制
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    limit_conn addr 10;
}